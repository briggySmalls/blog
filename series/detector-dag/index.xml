<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>detector-dag on Sam Briggs [software developer]</title>
    <link>https://sambriggs.dev/series/detector-dag/</link>
    <description>Recent content in detector-dag on Sam Briggs [software developer]</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 26 Apr 2020 12:48:14 +0100</lastBuildDate>
    
	<atom:link href="https://sambriggs.dev/series/detector-dag/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Power detection</title>
      <link>https://sambriggs.dev/posts/detector-dag/power-detection/</link>
      <pubDate>Sun, 26 Apr 2020 12:48:14 +0100</pubDate>
      
      <guid>https://sambriggs.dev/posts/detector-dag/power-detection/</guid>
      <description>I connected a Raspberry Pi to the UPSLite that I&amp;rsquo;d identified in the concepts blog post. Right out of the box I could switch off power and the Pi would stay alive!
I moved on to detecting the power state changes with the Pi: I wanted to send MMQT messages with my AWS IoT client when these events occurred.
Documentation on the UPSLite was thin on the ground, but I&amp;rsquo;d found a tweet from the manufacturer that indicated I could detect this on the Pi&amp;rsquo;s GPIO7:</description>
    </item>
    
    <item>
      <title>AWS IoT - Pi in the sky</title>
      <link>https://sambriggs.dev/posts/detector-dag/aws-iot/</link>
      <pubDate>Thu, 16 Apr 2020 22:08:03 +0100</pubDate>
      
      <guid>https://sambriggs.dev/posts/detector-dag/aws-iot/</guid>
      <description>Introduction With a high-level plan sketched out and a power detecting Raspberry Pi at my disposal it was time to stay up late and start tapping!
As someone who&amp;rsquo;s trying to reposition themselves as a &amp;lsquo;backend developer&amp;rsquo;, I knew I wanted to become familiar with Amazon Web Services (AWS). It might not be the answer to every solution, but it certainly felt like something that should be in my toolkit.</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://sambriggs.dev/posts/detector-dag/concepts/</link>
      <pubDate>Mon, 13 Apr 2020 11:41:03 +0100</pubDate>
      
      <guid>https://sambriggs.dev/posts/detector-dag/concepts/</guid>
      <description>I set to work designing a system for monitoring power remotely, and came up with a few iterations.
All of my concepts revolved around a few assumptions:
 A device would be a cheap Raspberry Pi Zero  There would be a server that could receive staus updates from multiple devices The server would email users in the case of a power failure  Iteration 1: I&amp;rsquo;m alive My initial ideas revolved around connecting the Raspberry Pi to the house&amp;rsquo;s WiFi network:</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://sambriggs.dev/posts/detector-dag/introduction/</link>
      <pubDate>Mon, 13 Apr 2020 10:33:44 +0100</pubDate>
      
      <guid>https://sambriggs.dev/posts/detector-dag/introduction/</guid>
      <description>My latest project was inspired when my best friend&amp;rsquo;s mum came to me with a problem:
 A while back there was a powercut in Alderney1, the circuit breaker tripped, and all the food in our freezer spoiled. Can we find something that will warn us if that has happened, so we can send a neighbour round?
 I felt confident that something would already exist, and sure enough a cursory search turned up a couple of products2.</description>
    </item>
    
  </channel>
</rss>